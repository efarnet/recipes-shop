[{"C:\\Users\\Stagiaire\\myproject\\src\\index.js":"1","C:\\Users\\Stagiaire\\myproject\\src\\App.js":"2","C:\\Users\\Stagiaire\\myproject\\src\\Pages\\index.js":"3","C:\\Users\\Stagiaire\\myproject\\src\\Components\\Layout.js":"4","C:\\Users\\Stagiaire\\myproject\\src\\Pages\\Index.js":"5","C:\\Users\\Stagiaire\\myproject\\src\\Pages\\RecipePage.js":"6"},{"size":222,"mtime":1607933308963,"results":"7","hashOfConfig":"8"},{"size":1103,"mtime":1608050378702,"results":"9","hashOfConfig":"8"},{"size":815,"mtime":1607969103286,"results":"10","hashOfConfig":"8"},{"size":2287,"mtime":1608020207062,"results":"11","hashOfConfig":"8"},{"size":913,"mtime":1608109993307,"results":"12","hashOfConfig":"8"},{"size":1083,"mtime":1608052169509,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1yuzugq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\Stagiaire\\myproject\\src\\index.js",[],["29","30"],"C:\\Users\\Stagiaire\\myproject\\src\\App.js",["31","32"],"import React, {useState, useEffect}  from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Layout from './Components/Layout';\nimport Index from './Pages/Index';\nimport RecipePage from './Pages/RecipePage';\n\n\nexport default function App() {\n\n  const APP_ID = \"acb4bcb4\";\n  const APP_KEY = \"f288db167df33f3fdc56c33dabf59f89\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [query, setQuery] = useState('Bananes');\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n\n    setRecipes(data.hits);\n  };\n\n  useEffect( () => {\n    getRecipes();\n  }, [query]);\n\n  return (\n      <Router>\n        <Route exact path=\"/\" component={() => <Index setRecipes={setRecipes}  setQuery={setQuery}recipes={recipes} />} />\n        <Route exact path=\"/RecipePage/:label\" component={() => <RecipePage  setRecipes={setRecipes} recipes={recipes}  />} />\n      </Router>\n  );\n\n \n}\n\n \n","C:\\Users\\Stagiaire\\myproject\\src\\Pages\\index.js",[],"C:\\Users\\Stagiaire\\myproject\\src\\Components\\Layout.js",[],"C:\\Users\\Stagiaire\\myproject\\src\\Pages\\Index.js",[],"C:\\Users\\Stagiaire\\myproject\\src\\Pages\\RecipePage.js",["33"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Layout from '../Components/Layout';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport default function RecipePage({setRecipes, recipes}) {\r\n    \r\n    const [currentRecipe, setCurrentRecipe] = useState(null);\r\n    const { label } = useParams();\r\n\r\n    useEffect(() => {\r\n        setCurrentRecipe(recipes.find(recipe => recipe.recipe.label.toLowerCase().replace(/\\s/g, '-') === label));\r\n    }, []);\r\n\r\n    if (!currentRecipe) {\r\n        return <div>Chargement...</div>;\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Card className=\"mx-auto my-auto\" style={{ width: '20rem' }}>\r\n                <Card.Img variant=\"top\" src={currentRecipe.recipe.image} />\r\n                <Card.Body>\r\n                    <Card.Title>{currentRecipe.recipe.label}</Card.Title>\r\n                    <Card.Text>{currentRecipe.recipe.ingredients.map(ingredient => <div>{ingredient.text}</div>)}</Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </Layout>\r\n    )\r\n}\r\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":5,"column":8,"nodeType":"40","messageId":"41","endLine":5,"endColumn":14},{"ruleId":"42","severity":1,"message":"43","line":27,"column":6,"nodeType":"44","endLine":27,"endColumn":13,"suggestions":"45"},{"ruleId":"42","severity":1,"message":"46","line":13,"column":8,"nodeType":"44","endLine":13,"endColumn":10,"suggestions":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRecipes'. Either include it or remove the dependency array.","ArrayExpression",["50"],"React Hook useEffect has missing dependencies: 'label' and 'recipes'. Either include them or remove the dependency array. If 'setCurrentRecipe' needs the current value of 'recipes', you can also switch to useReducer instead of useState and read 'recipes' in the reducer.",["51"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},{"desc":"54","fix":"55"},"Update the dependencies array to be: [getRecipes, query]",{"range":"56","text":"57"},"Update the dependencies array to be: [label, recipes]",{"range":"58","text":"59"},[787,794],"[getRecipes, query]",[502,504],"[label, recipes]"]